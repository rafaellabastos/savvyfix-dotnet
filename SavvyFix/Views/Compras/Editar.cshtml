@model SavvyFix.Models.Compras

@{
ViewData["Title"] = "Editar Compras";
}
<!-- Editar dados de uma compra salva no histórico no banco de dados -->

<h2 class="display-5 text-center pb-4">Editar Compra</h2>

<form class="card-body mx-auto" style="width: 40rem;" asp-action="Editar" method="post">
    <div class="mb-3">
        <label asp-for="IdCompra" class="control-label font-monospace">Id:</label>
        <input asp-for="IdCompra" class="form-control border border-secondary" readonly/>
    </div>
    <div class="mb-3">
        <label asp-for="NmProd" class="control-label font-monospace">Nome:</label>
        <input asp-for="NmProd" class="form-control border border-secondary" required />
    </div>
    <div class="mb-3">
        <label asp-for="QntdProd" class="control-label font-monospace">Quantidade:</label>
        <input asp-for="QntdProd" class="form-control border border-secondary" required/>
        <span asp-validation-for="QntdProd" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ValorCompra" class="control-label font-monospace">Valor:</label>
        <input asp-for="ValorCompra" class="form-control border border-secondary" required />
    </div>
    <div class="mb-3">
        <input type="submit" value="Editar" class="btn btn-primary"/>
        <a asp-controller="Compras" asp-action="Index" class="btn btn-danger">Voltar</a>
    </div>
</form>

<script>
    document.getElementById('QntdProd').addEventListener('input', function (event) {
        var value = event.target.value;
        if (value !== '' && (!Number.isInteger(Number(value)) || value <= 0)) {
            event.target.setCustomValidity('A quantidade deve ser um número inteiro positivo.');
        } else {
            event.target.setCustomValidity('');
        }
    });
</script>
